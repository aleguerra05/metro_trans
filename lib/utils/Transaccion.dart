class Transaccion implements Comparable<Transaccion>{

  DateTime fecha;
  TIPO_SERVICIO servicio;
  TIPO_TRANSACCION operacion;
  double monto;
  TIPO_MONEDA moneda;
  var noTransaccion;
  double saldo = 0.0;

  Transaccion()
  {
    fecha = new DateTime.now();
    servicio = TIPO_SERVICIO.DEFAULT;
    operacion = TIPO_TRANSACCION.DEFAULT;
    monto = 0.0;
    moneda = TIPO_MONEDA.DEFAULT;
    noTransaccion = "1";
    saldo = 0.0;
  }

  @override
  equals(Object obj) {
    if (obj is Transaccion) {
      return obj.noTransaccion==this.noTransaccion;
    }else
      return false;
  }
  @override bool operator ==(other) {
    // TODO: implement ==
    return this.noTransaccion==((other as Transaccion).noTransaccion);
  }


  @override
  toString() {
    return this.noTransaccion;
  }

  @override
  int compareTo(Transaccion other) {
    return fecha.compareTo(other.fecha);
  }

}

class Saldo{
  DateTime fecha;
  double monto;
  TIPO_MONEDA moneda;
  bool isAutoGenerated;

  Saldo()
  {
    moneda = TIPO_MONEDA.DEFAULT;
    monto = 0.0;
    fecha = new DateTime(1,1,1);
    isAutoGenerated = true;
  }

  @override
  String toString()
  {
    return this.monto.toString();
  }
}

enum TIPO_SERVICIO {
  ATM,
  TELEFONO,
  ELECTRICIDAD,
  TRANSFERENCIA,
  SALARIO,
  INTERES,
  POS,
  DEFAULT,
}

enum TIPO_TRANSACCION {
  DEBITO,
  CREDITO,
  DEFAULT,
}

enum TIPO_MONEDA {
  CUC,
  CUP,
  DEFAULT,
}

enum TIPO_OPERACIONES {
  DEFAULT,
  CONSULTAR_SALDO,
  CONSULTAR_SALDO_ERROR,
  TRANSFERENCIA_TX_SALDO,
  TRANSFERENCIA_RX_SALDO,
  TRANSFERENCIA_FALLIDA,
  ERROR_FACTURA,
  FACTURA,
  FACTURA_PAGADA,
  AUTENTICAR,
  INFO_CODIGO_ACTIVACION,
  ERROR_CODIGO_ACTIVACION,
  REGISTRAR_SUCESS,
  ERROR,
  ERROR_AUTENTICACION,
  ERROR_SERVICIO_SIN_AUTENTICACION,
  ERROR_ULTIMAS_OPERACIONES,
  ULTIMAS_OPERACIONES,
}